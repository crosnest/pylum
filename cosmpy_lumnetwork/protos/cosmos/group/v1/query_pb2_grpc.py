# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from cosmos.group.v1 import query_pb2 as cosmos_dot_group_dot_v1_dot_query__pb2


class QueryStub(object):
  """Query is the cosmos.group.v1 Query service.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GroupInfo = channel.unary_unary(
        '/cosmos.group.v1.Query/GroupInfo',
        request_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupInfoRequest.SerializeToString,
        response_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupInfoResponse.FromString,
        )
    self.GroupPolicyInfo = channel.unary_unary(
        '/cosmos.group.v1.Query/GroupPolicyInfo',
        request_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupPolicyInfoRequest.SerializeToString,
        response_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupPolicyInfoResponse.FromString,
        )
    self.GroupMembers = channel.unary_unary(
        '/cosmos.group.v1.Query/GroupMembers',
        request_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupMembersRequest.SerializeToString,
        response_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupMembersResponse.FromString,
        )
    self.GroupsByAdmin = channel.unary_unary(
        '/cosmos.group.v1.Query/GroupsByAdmin',
        request_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupsByAdminRequest.SerializeToString,
        response_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupsByAdminResponse.FromString,
        )
    self.GroupPoliciesByGroup = channel.unary_unary(
        '/cosmos.group.v1.Query/GroupPoliciesByGroup',
        request_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupPoliciesByGroupRequest.SerializeToString,
        response_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupPoliciesByGroupResponse.FromString,
        )
    self.GroupPoliciesByAdmin = channel.unary_unary(
        '/cosmos.group.v1.Query/GroupPoliciesByAdmin',
        request_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupPoliciesByAdminRequest.SerializeToString,
        response_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupPoliciesByAdminResponse.FromString,
        )
    self.Proposal = channel.unary_unary(
        '/cosmos.group.v1.Query/Proposal',
        request_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryProposalRequest.SerializeToString,
        response_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryProposalResponse.FromString,
        )
    self.ProposalsByGroupPolicy = channel.unary_unary(
        '/cosmos.group.v1.Query/ProposalsByGroupPolicy',
        request_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryProposalsByGroupPolicyRequest.SerializeToString,
        response_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryProposalsByGroupPolicyResponse.FromString,
        )
    self.VoteByProposalVoter = channel.unary_unary(
        '/cosmos.group.v1.Query/VoteByProposalVoter',
        request_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryVoteByProposalVoterRequest.SerializeToString,
        response_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryVoteByProposalVoterResponse.FromString,
        )
    self.VotesByProposal = channel.unary_unary(
        '/cosmos.group.v1.Query/VotesByProposal',
        request_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryVotesByProposalRequest.SerializeToString,
        response_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryVotesByProposalResponse.FromString,
        )
    self.VotesByVoter = channel.unary_unary(
        '/cosmos.group.v1.Query/VotesByVoter',
        request_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryVotesByVoterRequest.SerializeToString,
        response_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryVotesByVoterResponse.FromString,
        )
    self.GroupsByMember = channel.unary_unary(
        '/cosmos.group.v1.Query/GroupsByMember',
        request_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupsByMemberRequest.SerializeToString,
        response_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupsByMemberResponse.FromString,
        )
    self.TallyResult = channel.unary_unary(
        '/cosmos.group.v1.Query/TallyResult',
        request_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryTallyResultRequest.SerializeToString,
        response_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryTallyResultResponse.FromString,
        )
    self.Groups = channel.unary_unary(
        '/cosmos.group.v1.Query/Groups',
        request_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupsRequest.SerializeToString,
        response_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupsResponse.FromString,
        )


class QueryServicer(object):
  """Query is the cosmos.group.v1 Query service.
  """

  def GroupInfo(self, request, context):
    """GroupInfo queries group info based on group id.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GroupPolicyInfo(self, request, context):
    """GroupPolicyInfo queries group policy info based on account address of group policy.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GroupMembers(self, request, context):
    """GroupMembers queries members of a group
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GroupsByAdmin(self, request, context):
    """GroupsByAdmin queries groups by admin address.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GroupPoliciesByGroup(self, request, context):
    """GroupPoliciesByGroup queries group policies by group id.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GroupPoliciesByAdmin(self, request, context):
    """GroupsByAdmin queries group policies by admin address.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Proposal(self, request, context):
    """Proposal queries a proposal based on proposal id.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ProposalsByGroupPolicy(self, request, context):
    """ProposalsByGroupPolicy queries proposals based on account address of group policy.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def VoteByProposalVoter(self, request, context):
    """VoteByProposalVoter queries a vote by proposal id and voter.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def VotesByProposal(self, request, context):
    """VotesByProposal queries a vote by proposal.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def VotesByVoter(self, request, context):
    """VotesByVoter queries a vote by voter.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GroupsByMember(self, request, context):
    """GroupsByMember queries groups by member address.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TallyResult(self, request, context):
    """TallyResult returns the tally result of a proposal. If the proposal is
    still in voting period, then this query computes the current tally state,
    which might not be final. On the other hand, if the proposal is final,
    then it simply returns the `final_tally_result` state stored in the
    proposal itself.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Groups(self, request, context):
    """Groups queries all groups in state.

    Since: cosmos-sdk 0.47.1
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GroupInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GroupInfo,
          request_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupInfoRequest.FromString,
          response_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupInfoResponse.SerializeToString,
      ),
      'GroupPolicyInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GroupPolicyInfo,
          request_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupPolicyInfoRequest.FromString,
          response_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupPolicyInfoResponse.SerializeToString,
      ),
      'GroupMembers': grpc.unary_unary_rpc_method_handler(
          servicer.GroupMembers,
          request_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupMembersRequest.FromString,
          response_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupMembersResponse.SerializeToString,
      ),
      'GroupsByAdmin': grpc.unary_unary_rpc_method_handler(
          servicer.GroupsByAdmin,
          request_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupsByAdminRequest.FromString,
          response_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupsByAdminResponse.SerializeToString,
      ),
      'GroupPoliciesByGroup': grpc.unary_unary_rpc_method_handler(
          servicer.GroupPoliciesByGroup,
          request_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupPoliciesByGroupRequest.FromString,
          response_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupPoliciesByGroupResponse.SerializeToString,
      ),
      'GroupPoliciesByAdmin': grpc.unary_unary_rpc_method_handler(
          servicer.GroupPoliciesByAdmin,
          request_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupPoliciesByAdminRequest.FromString,
          response_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupPoliciesByAdminResponse.SerializeToString,
      ),
      'Proposal': grpc.unary_unary_rpc_method_handler(
          servicer.Proposal,
          request_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryProposalRequest.FromString,
          response_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryProposalResponse.SerializeToString,
      ),
      'ProposalsByGroupPolicy': grpc.unary_unary_rpc_method_handler(
          servicer.ProposalsByGroupPolicy,
          request_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryProposalsByGroupPolicyRequest.FromString,
          response_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryProposalsByGroupPolicyResponse.SerializeToString,
      ),
      'VoteByProposalVoter': grpc.unary_unary_rpc_method_handler(
          servicer.VoteByProposalVoter,
          request_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryVoteByProposalVoterRequest.FromString,
          response_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryVoteByProposalVoterResponse.SerializeToString,
      ),
      'VotesByProposal': grpc.unary_unary_rpc_method_handler(
          servicer.VotesByProposal,
          request_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryVotesByProposalRequest.FromString,
          response_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryVotesByProposalResponse.SerializeToString,
      ),
      'VotesByVoter': grpc.unary_unary_rpc_method_handler(
          servicer.VotesByVoter,
          request_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryVotesByVoterRequest.FromString,
          response_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryVotesByVoterResponse.SerializeToString,
      ),
      'GroupsByMember': grpc.unary_unary_rpc_method_handler(
          servicer.GroupsByMember,
          request_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupsByMemberRequest.FromString,
          response_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupsByMemberResponse.SerializeToString,
      ),
      'TallyResult': grpc.unary_unary_rpc_method_handler(
          servicer.TallyResult,
          request_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryTallyResultRequest.FromString,
          response_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryTallyResultResponse.SerializeToString,
      ),
      'Groups': grpc.unary_unary_rpc_method_handler(
          servicer.Groups,
          request_deserializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupsRequest.FromString,
          response_serializer=cosmos_dot_group_dot_v1_dot_query__pb2.QueryGroupsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'cosmos.group.v1.Query', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
