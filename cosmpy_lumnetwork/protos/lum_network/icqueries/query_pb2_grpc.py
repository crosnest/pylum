# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from lum_network.icqueries import query_pb2 as lum__network_dot_icqueries_dot_query__pb2


class QueryServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Queries = channel.unary_unary(
        '/stride.interchainquery.v1.QueryService/Queries',
        request_serializer=lum__network_dot_icqueries_dot_query__pb2.QueryQueriesRequest.SerializeToString,
        response_deserializer=lum__network_dot_icqueries_dot_query__pb2.QueryQueriesResponse.FromString,
        )
    self.PendingQueries = channel.unary_unary(
        '/stride.interchainquery.v1.QueryService/PendingQueries',
        request_serializer=lum__network_dot_icqueries_dot_query__pb2.QueryPendingQueriesRequest.SerializeToString,
        response_deserializer=lum__network_dot_icqueries_dot_query__pb2.QueryPendingQueriesResponse.FromString,
        )


class QueryServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Queries(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PendingQueries(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_QueryServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Queries': grpc.unary_unary_rpc_method_handler(
          servicer.Queries,
          request_deserializer=lum__network_dot_icqueries_dot_query__pb2.QueryQueriesRequest.FromString,
          response_serializer=lum__network_dot_icqueries_dot_query__pb2.QueryQueriesResponse.SerializeToString,
      ),
      'PendingQueries': grpc.unary_unary_rpc_method_handler(
          servicer.PendingQueries,
          request_deserializer=lum__network_dot_icqueries_dot_query__pb2.QueryPendingQueriesRequest.FromString,
          response_serializer=lum__network_dot_icqueries_dot_query__pb2.QueryPendingQueriesResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'stride.interchainquery.v1.QueryService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
