# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from lum_network.beam import query_pb2 as lum__network_dot_beam_dot_query__pb2


class QueryStub(object):
  """Query defines the gRPC querier service.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Beam = channel.unary_unary(
        '/lum.network.beam.Query/Beam',
        request_serializer=lum__network_dot_beam_dot_query__pb2.QueryGetBeamRequest.SerializeToString,
        response_deserializer=lum__network_dot_beam_dot_query__pb2.QueryGetBeamResponse.FromString,
        )
    self.Beams = channel.unary_unary(
        '/lum.network.beam.Query/Beams',
        request_serializer=lum__network_dot_beam_dot_query__pb2.QueryFetchBeamsRequest.SerializeToString,
        response_deserializer=lum__network_dot_beam_dot_query__pb2.QueryFetchBeamsResponse.FromString,
        )
    self.BeamsOpenQueue = channel.unary_unary(
        '/lum.network.beam.Query/BeamsOpenQueue',
        request_serializer=lum__network_dot_beam_dot_query__pb2.QueryFetchBeamsOpenQueueRequest.SerializeToString,
        response_deserializer=lum__network_dot_beam_dot_query__pb2.QueryFetchBeamsOpenQueueResponse.FromString,
        )


class QueryServicer(object):
  """Query defines the gRPC querier service.
  """

  def Beam(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Beams(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def BeamsOpenQueue(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Beam': grpc.unary_unary_rpc_method_handler(
          servicer.Beam,
          request_deserializer=lum__network_dot_beam_dot_query__pb2.QueryGetBeamRequest.FromString,
          response_serializer=lum__network_dot_beam_dot_query__pb2.QueryGetBeamResponse.SerializeToString,
      ),
      'Beams': grpc.unary_unary_rpc_method_handler(
          servicer.Beams,
          request_deserializer=lum__network_dot_beam_dot_query__pb2.QueryFetchBeamsRequest.FromString,
          response_serializer=lum__network_dot_beam_dot_query__pb2.QueryFetchBeamsResponse.SerializeToString,
      ),
      'BeamsOpenQueue': grpc.unary_unary_rpc_method_handler(
          servicer.BeamsOpenQueue,
          request_deserializer=lum__network_dot_beam_dot_query__pb2.QueryFetchBeamsOpenQueueRequest.FromString,
          response_serializer=lum__network_dot_beam_dot_query__pb2.QueryFetchBeamsOpenQueueResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'lum.network.beam.Query', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
