# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from lum_network.airdrop import query_pb2 as lum__network_dot_airdrop_dot_query__pb2


class QueryStub(object):
  """Query defines the gRPC querier service.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ModuleAccountBalance = channel.unary_unary(
        '/lum.network.airdrop.Query/ModuleAccountBalance',
        request_serializer=lum__network_dot_airdrop_dot_query__pb2.QueryModuleAccountBalanceRequest.SerializeToString,
        response_deserializer=lum__network_dot_airdrop_dot_query__pb2.QueryModuleAccountBalanceResponse.FromString,
        )
    self.Params = channel.unary_unary(
        '/lum.network.airdrop.Query/Params',
        request_serializer=lum__network_dot_airdrop_dot_query__pb2.QueryParamsRequest.SerializeToString,
        response_deserializer=lum__network_dot_airdrop_dot_query__pb2.QueryParamsResponse.FromString,
        )
    self.ClaimRecord = channel.unary_unary(
        '/lum.network.airdrop.Query/ClaimRecord',
        request_serializer=lum__network_dot_airdrop_dot_query__pb2.QueryClaimRecordRequest.SerializeToString,
        response_deserializer=lum__network_dot_airdrop_dot_query__pb2.QueryClaimRecordResponse.FromString,
        )
    self.ClaimableForAction = channel.unary_unary(
        '/lum.network.airdrop.Query/ClaimableForAction',
        request_serializer=lum__network_dot_airdrop_dot_query__pb2.QueryClaimableForActionRequest.SerializeToString,
        response_deserializer=lum__network_dot_airdrop_dot_query__pb2.QueryClaimableForActionResponse.FromString,
        )
    self.TotalClaimable = channel.unary_unary(
        '/lum.network.airdrop.Query/TotalClaimable',
        request_serializer=lum__network_dot_airdrop_dot_query__pb2.QueryTotalClaimableRequest.SerializeToString,
        response_deserializer=lum__network_dot_airdrop_dot_query__pb2.QueryTotalClaimableResponse.FromString,
        )


class QueryServicer(object):
  """Query defines the gRPC querier service.
  """

  def ModuleAccountBalance(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Params(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ClaimRecord(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ClaimableForAction(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TotalClaimable(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ModuleAccountBalance': grpc.unary_unary_rpc_method_handler(
          servicer.ModuleAccountBalance,
          request_deserializer=lum__network_dot_airdrop_dot_query__pb2.QueryModuleAccountBalanceRequest.FromString,
          response_serializer=lum__network_dot_airdrop_dot_query__pb2.QueryModuleAccountBalanceResponse.SerializeToString,
      ),
      'Params': grpc.unary_unary_rpc_method_handler(
          servicer.Params,
          request_deserializer=lum__network_dot_airdrop_dot_query__pb2.QueryParamsRequest.FromString,
          response_serializer=lum__network_dot_airdrop_dot_query__pb2.QueryParamsResponse.SerializeToString,
      ),
      'ClaimRecord': grpc.unary_unary_rpc_method_handler(
          servicer.ClaimRecord,
          request_deserializer=lum__network_dot_airdrop_dot_query__pb2.QueryClaimRecordRequest.FromString,
          response_serializer=lum__network_dot_airdrop_dot_query__pb2.QueryClaimRecordResponse.SerializeToString,
      ),
      'ClaimableForAction': grpc.unary_unary_rpc_method_handler(
          servicer.ClaimableForAction,
          request_deserializer=lum__network_dot_airdrop_dot_query__pb2.QueryClaimableForActionRequest.FromString,
          response_serializer=lum__network_dot_airdrop_dot_query__pb2.QueryClaimableForActionResponse.SerializeToString,
      ),
      'TotalClaimable': grpc.unary_unary_rpc_method_handler(
          servicer.TotalClaimable,
          request_deserializer=lum__network_dot_airdrop_dot_query__pb2.QueryTotalClaimableRequest.FromString,
          response_serializer=lum__network_dot_airdrop_dot_query__pb2.QueryTotalClaimableResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'lum.network.airdrop.Query', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
