# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from lum_network.icacallbacks import query_pb2 as lum__network_dot_icacallbacks_dot_query__pb2


class QueryStub(object):
  """Query defines the gRPC querier service.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Params = channel.unary_unary(
        '/lum.network.icacallbacks.Query/Params',
        request_serializer=lum__network_dot_icacallbacks_dot_query__pb2.QueryParamsRequest.SerializeToString,
        response_deserializer=lum__network_dot_icacallbacks_dot_query__pb2.QueryParamsResponse.FromString,
        )
    self.CallbackData = channel.unary_unary(
        '/lum.network.icacallbacks.Query/CallbackData',
        request_serializer=lum__network_dot_icacallbacks_dot_query__pb2.QueryGetCallbackDataRequest.SerializeToString,
        response_deserializer=lum__network_dot_icacallbacks_dot_query__pb2.QueryGetCallbackDataResponse.FromString,
        )
    self.CallbackDataAll = channel.unary_unary(
        '/lum.network.icacallbacks.Query/CallbackDataAll',
        request_serializer=lum__network_dot_icacallbacks_dot_query__pb2.QueryAllCallbackDataRequest.SerializeToString,
        response_deserializer=lum__network_dot_icacallbacks_dot_query__pb2.QueryAllCallbackDataResponse.FromString,
        )


class QueryServicer(object):
  """Query defines the gRPC querier service.
  """

  def Params(self, request, context):
    """Parameters queries the parameters of the module.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CallbackData(self, request, context):
    """Queries a CallbackData by index.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CallbackDataAll(self, request, context):
    """Queries a list of CallbackData items.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Params': grpc.unary_unary_rpc_method_handler(
          servicer.Params,
          request_deserializer=lum__network_dot_icacallbacks_dot_query__pb2.QueryParamsRequest.FromString,
          response_serializer=lum__network_dot_icacallbacks_dot_query__pb2.QueryParamsResponse.SerializeToString,
      ),
      'CallbackData': grpc.unary_unary_rpc_method_handler(
          servicer.CallbackData,
          request_deserializer=lum__network_dot_icacallbacks_dot_query__pb2.QueryGetCallbackDataRequest.FromString,
          response_serializer=lum__network_dot_icacallbacks_dot_query__pb2.QueryGetCallbackDataResponse.SerializeToString,
      ),
      'CallbackDataAll': grpc.unary_unary_rpc_method_handler(
          servicer.CallbackDataAll,
          request_deserializer=lum__network_dot_icacallbacks_dot_query__pb2.QueryAllCallbackDataRequest.FromString,
          response_serializer=lum__network_dot_icacallbacks_dot_query__pb2.QueryAllCallbackDataResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'lum.network.icacallbacks.Query', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
