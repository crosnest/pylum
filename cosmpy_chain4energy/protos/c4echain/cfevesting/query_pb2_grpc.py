# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from c4echain.cfevesting import query_pb2 as c4echain_dot_cfevesting_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC querier service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Params = channel.unary_unary(
                '/chain4energy.c4echain.cfevesting.Query/Params',
                request_serializer=c4echain_dot_cfevesting_dot_query__pb2.QueryParamsRequest.SerializeToString,
                response_deserializer=c4echain_dot_cfevesting_dot_query__pb2.QueryParamsResponse.FromString,
                )
        self.VestingType = channel.unary_unary(
                '/chain4energy.c4echain.cfevesting.Query/VestingType',
                request_serializer=c4echain_dot_cfevesting_dot_query__pb2.QueryVestingTypeRequest.SerializeToString,
                response_deserializer=c4echain_dot_cfevesting_dot_query__pb2.QueryVestingTypeResponse.FromString,
                )
        self.VestingPools = channel.unary_unary(
                '/chain4energy.c4echain.cfevesting.Query/VestingPools',
                request_serializer=c4echain_dot_cfevesting_dot_query__pb2.QueryVestingPoolsRequest.SerializeToString,
                response_deserializer=c4echain_dot_cfevesting_dot_query__pb2.QueryVestingPoolsResponse.FromString,
                )
        self.VestingsSummary = channel.unary_unary(
                '/chain4energy.c4echain.cfevesting.Query/VestingsSummary',
                request_serializer=c4echain_dot_cfevesting_dot_query__pb2.QueryVestingsSummaryRequest.SerializeToString,
                response_deserializer=c4echain_dot_cfevesting_dot_query__pb2.QueryVestingsSummaryResponse.FromString,
                )
        self.GenesisVestingsSummary = channel.unary_unary(
                '/chain4energy.c4echain.cfevesting.Query/GenesisVestingsSummary',
                request_serializer=c4echain_dot_cfevesting_dot_query__pb2.QueryGenesisVestingsSummaryRequest.SerializeToString,
                response_deserializer=c4echain_dot_cfevesting_dot_query__pb2.QueryGenesisVestingsSummaryResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC querier service.
    """

    def Params(self, request, context):
        """Parameters queries the parameters of the module.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VestingType(self, request, context):
        """Queries a list of VestingType items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VestingPools(self, request, context):
        """Queries a list of Vesting items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VestingsSummary(self, request, context):
        """Queries a summary of the entire vesting.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenesisVestingsSummary(self, request, context):
        """this line is used by starport scaffolding # 2

        Queries a list of GenesisVestingsSummary items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Params': grpc.unary_unary_rpc_method_handler(
                    servicer.Params,
                    request_deserializer=c4echain_dot_cfevesting_dot_query__pb2.QueryParamsRequest.FromString,
                    response_serializer=c4echain_dot_cfevesting_dot_query__pb2.QueryParamsResponse.SerializeToString,
            ),
            'VestingType': grpc.unary_unary_rpc_method_handler(
                    servicer.VestingType,
                    request_deserializer=c4echain_dot_cfevesting_dot_query__pb2.QueryVestingTypeRequest.FromString,
                    response_serializer=c4echain_dot_cfevesting_dot_query__pb2.QueryVestingTypeResponse.SerializeToString,
            ),
            'VestingPools': grpc.unary_unary_rpc_method_handler(
                    servicer.VestingPools,
                    request_deserializer=c4echain_dot_cfevesting_dot_query__pb2.QueryVestingPoolsRequest.FromString,
                    response_serializer=c4echain_dot_cfevesting_dot_query__pb2.QueryVestingPoolsResponse.SerializeToString,
            ),
            'VestingsSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.VestingsSummary,
                    request_deserializer=c4echain_dot_cfevesting_dot_query__pb2.QueryVestingsSummaryRequest.FromString,
                    response_serializer=c4echain_dot_cfevesting_dot_query__pb2.QueryVestingsSummaryResponse.SerializeToString,
            ),
            'GenesisVestingsSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.GenesisVestingsSummary,
                    request_deserializer=c4echain_dot_cfevesting_dot_query__pb2.QueryGenesisVestingsSummaryRequest.FromString,
                    response_serializer=c4echain_dot_cfevesting_dot_query__pb2.QueryGenesisVestingsSummaryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chain4energy.c4echain.cfevesting.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service.
    """

    @staticmethod
    def Params(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chain4energy.c4echain.cfevesting.Query/Params',
            c4echain_dot_cfevesting_dot_query__pb2.QueryParamsRequest.SerializeToString,
            c4echain_dot_cfevesting_dot_query__pb2.QueryParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VestingType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chain4energy.c4echain.cfevesting.Query/VestingType',
            c4echain_dot_cfevesting_dot_query__pb2.QueryVestingTypeRequest.SerializeToString,
            c4echain_dot_cfevesting_dot_query__pb2.QueryVestingTypeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VestingPools(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chain4energy.c4echain.cfevesting.Query/VestingPools',
            c4echain_dot_cfevesting_dot_query__pb2.QueryVestingPoolsRequest.SerializeToString,
            c4echain_dot_cfevesting_dot_query__pb2.QueryVestingPoolsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VestingsSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chain4energy.c4echain.cfevesting.Query/VestingsSummary',
            c4echain_dot_cfevesting_dot_query__pb2.QueryVestingsSummaryRequest.SerializeToString,
            c4echain_dot_cfevesting_dot_query__pb2.QueryVestingsSummaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GenesisVestingsSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chain4energy.c4echain.cfevesting.Query/GenesisVestingsSummary',
            c4echain_dot_cfevesting_dot_query__pb2.QueryGenesisVestingsSummaryRequest.SerializeToString,
            c4echain_dot_cfevesting_dot_query__pb2.QueryGenesisVestingsSummaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
