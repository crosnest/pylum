# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from c4echain.cfesignature import query_pb2 as c4echain_dot_cfesignature_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC querier service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Params = channel.unary_unary(
                '/chain4energy.c4echain.cfesignature.Query/Params',
                request_serializer=c4echain_dot_cfesignature_dot_query__pb2.QueryParamsRequest.SerializeToString,
                response_deserializer=c4echain_dot_cfesignature_dot_query__pb2.QueryParamsResponse.FromString,
                )
        self.CreateReferenceId = channel.unary_unary(
                '/chain4energy.c4echain.cfesignature.Query/CreateReferenceId',
                request_serializer=c4echain_dot_cfesignature_dot_query__pb2.QueryCreateReferenceIdRequest.SerializeToString,
                response_deserializer=c4echain_dot_cfesignature_dot_query__pb2.QueryCreateReferenceIdResponse.FromString,
                )
        self.CreateStorageKey = channel.unary_unary(
                '/chain4energy.c4echain.cfesignature.Query/CreateStorageKey',
                request_serializer=c4echain_dot_cfesignature_dot_query__pb2.QueryCreateStorageKeyRequest.SerializeToString,
                response_deserializer=c4echain_dot_cfesignature_dot_query__pb2.QueryCreateStorageKeyResponse.FromString,
                )
        self.CreateReferencePayloadLink = channel.unary_unary(
                '/chain4energy.c4echain.cfesignature.Query/CreateReferencePayloadLink',
                request_serializer=c4echain_dot_cfesignature_dot_query__pb2.QueryCreateReferencePayloadLinkRequest.SerializeToString,
                response_deserializer=c4echain_dot_cfesignature_dot_query__pb2.QueryCreateReferencePayloadLinkResponse.FromString,
                )
        self.VerifySignature = channel.unary_unary(
                '/chain4energy.c4echain.cfesignature.Query/VerifySignature',
                request_serializer=c4echain_dot_cfesignature_dot_query__pb2.QueryVerifySignatureRequest.SerializeToString,
                response_deserializer=c4echain_dot_cfesignature_dot_query__pb2.QueryVerifySignatureResponse.FromString,
                )
        self.GetAccountInfo = channel.unary_unary(
                '/chain4energy.c4echain.cfesignature.Query/GetAccountInfo',
                request_serializer=c4echain_dot_cfesignature_dot_query__pb2.QueryGetAccountInfoRequest.SerializeToString,
                response_deserializer=c4echain_dot_cfesignature_dot_query__pb2.QueryGetAccountInfoResponse.FromString,
                )
        self.VerifyReferencePayloadLink = channel.unary_unary(
                '/chain4energy.c4echain.cfesignature.Query/VerifyReferencePayloadLink',
                request_serializer=c4echain_dot_cfesignature_dot_query__pb2.QueryVerifyReferencePayloadLinkRequest.SerializeToString,
                response_deserializer=c4echain_dot_cfesignature_dot_query__pb2.QueryVerifyReferencePayloadLinkResponse.FromString,
                )
        self.GetReferencePayloadLink = channel.unary_unary(
                '/chain4energy.c4echain.cfesignature.Query/GetReferencePayloadLink',
                request_serializer=c4echain_dot_cfesignature_dot_query__pb2.QueryGetReferencePayloadLinkRequest.SerializeToString,
                response_deserializer=c4echain_dot_cfesignature_dot_query__pb2.QueryGetReferencePayloadLinkResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC querier service.
    """

    def Params(self, request, context):
        """Parameters queries the parameters of the module.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateReferenceId(self, request, context):
        """Queries a list of CreateReferenceId items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateStorageKey(self, request, context):
        """Queries a list of CreateStorageKey items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateReferencePayloadLink(self, request, context):
        """Queries a list of CreateReferencePayloadLink items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifySignature(self, request, context):
        """Queries a list of VerifySignature items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccountInfo(self, request, context):
        """Queries a list of GetAccountInfo items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyReferencePayloadLink(self, request, context):
        """Queries a list of VerifyReferencePayloadLink items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReferencePayloadLink(self, request, context):
        """Queries a list of GetReferencePayloadLink items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Params': grpc.unary_unary_rpc_method_handler(
                    servicer.Params,
                    request_deserializer=c4echain_dot_cfesignature_dot_query__pb2.QueryParamsRequest.FromString,
                    response_serializer=c4echain_dot_cfesignature_dot_query__pb2.QueryParamsResponse.SerializeToString,
            ),
            'CreateReferenceId': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateReferenceId,
                    request_deserializer=c4echain_dot_cfesignature_dot_query__pb2.QueryCreateReferenceIdRequest.FromString,
                    response_serializer=c4echain_dot_cfesignature_dot_query__pb2.QueryCreateReferenceIdResponse.SerializeToString,
            ),
            'CreateStorageKey': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateStorageKey,
                    request_deserializer=c4echain_dot_cfesignature_dot_query__pb2.QueryCreateStorageKeyRequest.FromString,
                    response_serializer=c4echain_dot_cfesignature_dot_query__pb2.QueryCreateStorageKeyResponse.SerializeToString,
            ),
            'CreateReferencePayloadLink': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateReferencePayloadLink,
                    request_deserializer=c4echain_dot_cfesignature_dot_query__pb2.QueryCreateReferencePayloadLinkRequest.FromString,
                    response_serializer=c4echain_dot_cfesignature_dot_query__pb2.QueryCreateReferencePayloadLinkResponse.SerializeToString,
            ),
            'VerifySignature': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifySignature,
                    request_deserializer=c4echain_dot_cfesignature_dot_query__pb2.QueryVerifySignatureRequest.FromString,
                    response_serializer=c4echain_dot_cfesignature_dot_query__pb2.QueryVerifySignatureResponse.SerializeToString,
            ),
            'GetAccountInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccountInfo,
                    request_deserializer=c4echain_dot_cfesignature_dot_query__pb2.QueryGetAccountInfoRequest.FromString,
                    response_serializer=c4echain_dot_cfesignature_dot_query__pb2.QueryGetAccountInfoResponse.SerializeToString,
            ),
            'VerifyReferencePayloadLink': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyReferencePayloadLink,
                    request_deserializer=c4echain_dot_cfesignature_dot_query__pb2.QueryVerifyReferencePayloadLinkRequest.FromString,
                    response_serializer=c4echain_dot_cfesignature_dot_query__pb2.QueryVerifyReferencePayloadLinkResponse.SerializeToString,
            ),
            'GetReferencePayloadLink': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReferencePayloadLink,
                    request_deserializer=c4echain_dot_cfesignature_dot_query__pb2.QueryGetReferencePayloadLinkRequest.FromString,
                    response_serializer=c4echain_dot_cfesignature_dot_query__pb2.QueryGetReferencePayloadLinkResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chain4energy.c4echain.cfesignature.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service.
    """

    @staticmethod
    def Params(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chain4energy.c4echain.cfesignature.Query/Params',
            c4echain_dot_cfesignature_dot_query__pb2.QueryParamsRequest.SerializeToString,
            c4echain_dot_cfesignature_dot_query__pb2.QueryParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateReferenceId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chain4energy.c4echain.cfesignature.Query/CreateReferenceId',
            c4echain_dot_cfesignature_dot_query__pb2.QueryCreateReferenceIdRequest.SerializeToString,
            c4echain_dot_cfesignature_dot_query__pb2.QueryCreateReferenceIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateStorageKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chain4energy.c4echain.cfesignature.Query/CreateStorageKey',
            c4echain_dot_cfesignature_dot_query__pb2.QueryCreateStorageKeyRequest.SerializeToString,
            c4echain_dot_cfesignature_dot_query__pb2.QueryCreateStorageKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateReferencePayloadLink(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chain4energy.c4echain.cfesignature.Query/CreateReferencePayloadLink',
            c4echain_dot_cfesignature_dot_query__pb2.QueryCreateReferencePayloadLinkRequest.SerializeToString,
            c4echain_dot_cfesignature_dot_query__pb2.QueryCreateReferencePayloadLinkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifySignature(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chain4energy.c4echain.cfesignature.Query/VerifySignature',
            c4echain_dot_cfesignature_dot_query__pb2.QueryVerifySignatureRequest.SerializeToString,
            c4echain_dot_cfesignature_dot_query__pb2.QueryVerifySignatureResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAccountInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chain4energy.c4echain.cfesignature.Query/GetAccountInfo',
            c4echain_dot_cfesignature_dot_query__pb2.QueryGetAccountInfoRequest.SerializeToString,
            c4echain_dot_cfesignature_dot_query__pb2.QueryGetAccountInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyReferencePayloadLink(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chain4energy.c4echain.cfesignature.Query/VerifyReferencePayloadLink',
            c4echain_dot_cfesignature_dot_query__pb2.QueryVerifyReferencePayloadLinkRequest.SerializeToString,
            c4echain_dot_cfesignature_dot_query__pb2.QueryVerifyReferencePayloadLinkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReferencePayloadLink(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chain4energy.c4echain.cfesignature.Query/GetReferencePayloadLink',
            c4echain_dot_cfesignature_dot_query__pb2.QueryGetReferencePayloadLinkRequest.SerializeToString,
            c4echain_dot_cfesignature_dot_query__pb2.QueryGetReferencePayloadLinkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
